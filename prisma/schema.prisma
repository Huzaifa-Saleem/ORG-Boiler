// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String          @id @default(uuid())
  email       String          @unique
  name        String?
  password    String? // if using credentials
  memberships OrgMembership[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Organization {
  id          String          @id @default(uuid())
  name        String
  slug        String          @unique // for subdomain or path-based routing
  memberships OrgMembership[]
  invites     Invite[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrgMembership {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String

  org   Organization @relation(fields: [orgId], references: [id])
  orgId String

  role     Role
  joinedAt DateTime @default(now())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, orgId])
}

enum Role {
  ADMIN
  SUBADMIN
  MEMBER
}

model Invite {
  id        String   @id @default(uuid())
  email     String
  token     String   @unique
  org       Organization @relation(fields: [orgId], references: [id])
  orgId     String
  role      Role
  expiresAt DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
